from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from Common.requests_db import request_db_is_ready_cakes


keyboard_user_accepted = ReplyKeyboardMarkup(
    keyboard=[
        [
        KeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—åüëç'),
        KeyboardButton(text='–û—Ç–∫–ª–æ–Ω–∏—Ç—åüëé')
        ]
    ],
    resize_keyboard=True,
    input_field_placeholder='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ'
)

keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [
        KeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å —Ç–æ—Ä—Ç–∏–∫üéÇ'),
        KeyboardButton(text='–°–æ–±—Ä–∞—Ç—å —Å–≤–æ–π —Ç–æ—Ä—Ç–∏–∫üéÇ')
        ],
        [
        KeyboardButton(text='–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å ‚òé'),
        KeyboardButton(text='–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üíµ')
        ]
    ],
    resize_keyboard=True,
    input_field_placeholder='–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?'
)

customize_cake = request_db_is_ready_cakes()

def get_modifications_cake():
    for cake in customize_cake:
        if cake['name'] == '–ö–∞—Å—Ç–æ–º–Ω—ã–π':
            return cake['modifications']


def get_levels_cake():
    levels = {}
    for modification in get_modifications_cake():
        if modification['modification'] == '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–≤–Ω–µ–π':
            for variable in modification["variables_of_modification"]:
                levels[variable["tier"]] = variable["price"]
            return levels


def get_shapes_cake():
    shapes = {}
    for modification in get_modifications_cake():
        if modification['modification'] == '–§–æ—Ä–º–∞':
            for variable in modification["variables_of_modification"]:
                shapes[variable["tier"]] = variable["price"]
            return shapes


def get_decor_cake():
    decor = {}
    for modification in get_modifications_cake():
        if modification['modification'] == '–î–µ–∫–æ—Ä':
            for variable in modification["variables_of_modification"]:
                decor[variable["tier"]] = variable["price"]
            return decor


def get_inscription_cake():
    inscription = {}
    for modification in get_modifications_cake():
        if modification['modification'] == '–ù–∞–¥–ø–∏—Å—å':
            for variable in modification["variables_of_modification"]:
                inscription[variable["tier"]] = variable["price"]
            return inscription


def create_keyboard(options):
    builder = ReplyKeyboardBuilder()
    for item, price in options.items():
        builder.add(KeyboardButton(text=f"{item} - {price}‚ÇΩ"))
    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True)
