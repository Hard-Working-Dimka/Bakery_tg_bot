import requests
from aiogram import types, Router, F
from aiogram.filters import CommandStart, Command
from aiogram.enums import ParseMode
from aiogram.types import ReplyKeyboardRemove, FSInputFile

from Common.requests_db import request_db_to_post_users_data
from Keyboards import reply
from Keyboards.reply import keyboard_user_accepted


user_private_router = Router()


@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message):

    payload_users_data = {
        "username": f'{message.from_user.first_name}',
        "telegram_id": message.from_user.id,
        "telegram_username": f'{message.from_user.username}'
    }

    try:

        request_db_to_post_users_data(payload_users_data)
        input_file = FSInputFile('Handlers/Agreement.pdf')
        await message.answer(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ.')
        await message.answer_document(document=input_file, reply_markup=keyboard_user_accepted)

    except requests.exceptions.HTTPError:

        await message.answer(f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é {message.from_user.first_name}!', reply_markup=reply.keyboard)


@user_private_router.message(F.text.contains('–û—Ç–∫–ª–æ–Ω–∏—Ç—å'))
async def user_accepted(message: types.Message):
    await message.answer('–ü–æ–∫–∞-–ø–æ–∫–∞ ‚úå', reply_markup=ReplyKeyboardRemove(remove_keyboard=True))


@user_private_router.message(F.text.contains('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å'))
async def user_accepted(message: types.Message):
    await message.answer('–Ø –±–æ—Ç cakeSto–ære, –ø–æ–º–æ–≥—É –í–∞–º –∑–∞–∫–∞–∑–∞—Ç—å –≤–∫—É—Å–Ω—ã–π —Ç–æ—Ä—Ç–∏–∫. üéÇüéÇüéÇ',
                         reply_markup=reply.keyboard)


@user_private_router.message(Command('feedback'))
@user_private_router.message(F.text.contains('–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å'))
async def cmd_cake_list(message: types.Message):
    await message.answer(
        '''–î–ª—è –æ—Ç–∑—ã–≤–æ–≤ –ø–æ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è:
            <b>–¢–µ–ª–µ—Ñ–æ–Ω</b> : +7123456789
            <b>TG</b> : @dunyakhin 
            <b>Email</b> : support@gmail.com''',
        parse_mode=ParseMode.HTML
                        )


@user_private_router.message(Command('payment'))
@user_private_router.message(F.text.contains('–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã'))
async def payment(message: types.Message):
    await message.answer('''–ö–∞–∫–æ–π-—Ç–æ —Å–ø–æ—Å–æ–±''')
